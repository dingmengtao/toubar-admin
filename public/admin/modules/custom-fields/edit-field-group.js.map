{"version":3,"sources":["webpack:///projects-root/laravel/public/admin/modules/custom-fields/edit-field-group.js","webpack:///webpack/bootstrap 6c6f3df66f280f5788a9","webpack:///./core/custom-fields/resources/assets/js/admin/modules/custom-fields/edit-field-group.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","20","21","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","length","descriptor","writable","key","protoProps","staticProps","ManageCustomFields","this","$body","$","RULES_GROUP_TEMPLATE_HTML","html","_self","on","event","dataRules","JSON","stringify","exportRulesToJson","dataFields","exportFieldsToJson","val","handleRules","handleFieldGroups","value","CURRENT_RULES","parseJSON","$_GLOBAL_TEMPLATE","LINE_GROUP_TEMPLATE","$_GROUP_CONTAINER","preventDefault","$current","$template","clone","hasClass","closest","append","$group","find","trigger","$parent","addClass","removeClass","$lineGroup","remove","forEach","rules","indexRule","item","index","type","totalAdded","CUSTOM_FIELDS_DATA","DELETED_FIELDS","NEW_FIELD_TEMPLATE","FIELD_OPTIONS","repeater","defaultValue","defaultValueTextarea","placeholderText","wysiwygToolbar","selectChoices","buttonLabel","rows","getOptions","htmlSrc","reloadOrderNumber","each","el","current","index_css","attr","setOrderNumber","number","getNewFieldTemplate","optionType","replace","parent","toggleClass","focus","sortable","text","WebEd","stringToSlug","$nameSlugField","$grandParent","push","data","animate","top","left","opacity","initFields","fields","$appendTo","field","indexField","id","Helpers","arrayGet","options","items","result","lineGroupData","element","$currentLine","getAllFields","$from","$pushTo","title","slug","instructions","window","load","jQuery"],"mappings":"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","file":"projects-root/laravel/public/admin/modules/custom-fields/edit-field-group.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 20);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 20:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(21);\n\n\n/***/ }),\n\n/***/ 21:\n/***/ (function(module, exports) {\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ManageCustomFields = function () {\n    function ManageCustomFields() {\n        _classCallCheck(this, ManageCustomFields);\n\n        this.$body = $('body');\n        this.RULES_GROUP_TEMPLATE_HTML = $('#rules_group_template').html();\n\n        var _self = this;\n\n        /**\n         * Pass data to form when submit\n         */\n        this.$body.on('submit', '.form-update-field-group', function (event) {\n            //event.preventDefault();\n            var dataRules = JSON.stringify(_self.exportRulesToJson());\n            var dataFields = JSON.stringify(_self.exportFieldsToJson());\n            $('#custom_fields_rules').html(dataRules).val(dataRules);\n            $('#custom_fields').html(dataFields).val(dataFields);\n        });\n\n        this.handleRules();\n        this.handleFieldGroups();\n    }\n\n    _createClass(ManageCustomFields, [{\n        key: 'handleRules',\n        value: function handleRules() {\n            var _self = this;\n\n            var CURRENT_RULES = $.parseJSON($('#custom_fields_rules').val());\n            var $_GLOBAL_TEMPLATE = $(_self.RULES_GROUP_TEMPLATE_HTML),\n                LINE_GROUP_TEMPLATE = $('#rules_line_group_template').html(),\n                $_GROUP_CONTAINER = $('.line-group-container');\n\n            /**\n             * Add new rule\n             */\n            _self.$body.on('click', '.location-add-rule', function (event) {\n                event.preventDefault();\n                var $current = $(this);\n                var $template = $_GLOBAL_TEMPLATE.clone();\n\n                if ($current.hasClass('location-add-rule-and')) {\n                    $current.closest('.line-group').append($template);\n                } else {\n                    var $group = $(LINE_GROUP_TEMPLATE);\n\n                    $group.append($template);\n                    $_GROUP_CONTAINER.append($group);\n                }\n                $template.find('.rule-a').trigger('change');\n            });\n\n            /**\n             * Change the rule-a\n             */\n            _self.$body.on('change', '.rule-a', function (event) {\n                event.preventDefault();\n                var $current = $(this);\n                var $parent = $current.closest('.rule-line');\n                $parent.find('.rules-b-group select').addClass('hidden');\n                $parent.find('.rules-b-group select[data-rel=\"' + $current.val() + '\"]').removeClass('hidden');\n            });\n\n            /**\n             * Remove rule\n             */\n            _self.$body.on('click', '.remove-rule-line', function (event) {\n                event.preventDefault();\n                var $current = $(this);\n                var $parent = $current.closest('.rule-line');\n                var $lineGroup = $current.closest('.line-group');\n                if ($lineGroup.find('.rule-line').length < 2) {\n                    $lineGroup.remove();\n                } else {\n                    $parent.remove();\n                }\n            });\n\n            /**\n             * Init data when page loaded\n             */\n            if (CURRENT_RULES.length < 1) {\n                $('.location-add-rule').trigger('click');\n            } else {\n                CURRENT_RULES.forEach(function (rules, indexRule) {\n                    var $group = $(LINE_GROUP_TEMPLATE);\n                    rules.forEach(function (item, index) {\n                        var $template = $_GLOBAL_TEMPLATE.clone();\n                        $template.find('.rule-a').val(item.name);\n                        $template.find('.rule-type').val(item.type);\n                        $template.find('.rule-b:not([data-rel=\"' + item.name + '\"])').addClass('hidden');\n                        $template.find('.rule-b[data-rel=\"' + item.name + '\"]').val(item.value);\n                        $group.append($template);\n                    });\n                    $_GROUP_CONTAINER.append($group);\n                });\n            }\n        }\n    }, {\n        key: 'handleFieldGroups',\n        value: function handleFieldGroups() {\n            var _self = this;\n\n            var totalAdded = 0;\n\n            var CUSTOM_FIELDS_DATA = $.parseJSON($('#custom_fields').val());\n\n            /**\n             * Deleted fields\n             * @type {Array}\n             */\n            var DELETED_FIELDS = [];\n\n            /**\n             * Template of new field item\n             * @type {any}\n             */\n            var NEW_FIELD_TEMPLATE = $('#_new-field-source_template').html();\n\n            /**\n             * Get all option templates\n             * @type {{repeater: (any), defaultValue: (any), defaultValueTextarea: (any), placeholderText: (any), wysiwygToolbar: (any), selectChoices: (any), buttonLabel: (any)}}\n             */\n            var FIELD_OPTIONS = {\n                repeater: $('#_options-repeater_template').html(),\n                defaultValue: $('#_options-defaultvalue_template').html(),\n                defaultValueTextarea: $('#_options-defaultvaluetextarea_template').html(),\n                placeholderText: $('#_options-placeholdertext_template').html(),\n                wysiwygToolbar: $('#_options-wysiwygtoolbar_template').html(),\n                selectChoices: $('#_options-selectchoices_template').html(),\n                buttonLabel: $('#_options-buttonlabel_template').html(),\n                rows: $('#_options-rows_template').html()\n            };\n\n            /**\n             * Get related options of current field type\n             * @param value\n             * @returns {string}\n             */\n            var getOptions = function getOptions(value) {\n                var htmlSrc = '';\n                switch (value) {\n                    case 'text':\n                    case 'email':\n                    case 'password':\n                    case 'number':\n                        htmlSrc += FIELD_OPTIONS.defaultValue + FIELD_OPTIONS.placeholderText;\n                        break;\n                    case 'image':\n                    case 'file':\n                        return '';\n                        break;\n                    case 'textarea':\n                        htmlSrc += FIELD_OPTIONS.defaultValueTextarea + FIELD_OPTIONS.placeholderText + FIELD_OPTIONS.rows;\n                        break;\n                    case 'wysiwyg':\n                        htmlSrc += FIELD_OPTIONS.defaultValueTextarea + FIELD_OPTIONS.wysiwygToolbar;\n                        break;\n                    case 'select':\n                        htmlSrc += FIELD_OPTIONS.selectChoices + FIELD_OPTIONS.defaultValue;\n                        break;\n                    case 'checkbox':\n                        htmlSrc += FIELD_OPTIONS.selectChoices;\n                        break;\n                    case 'radio':\n                        htmlSrc += FIELD_OPTIONS.selectChoices;\n                        break;\n                    case 'repeater':\n                        htmlSrc += FIELD_OPTIONS.repeater + FIELD_OPTIONS.buttonLabel;\n                        break;\n                    default:\n\n                        break;\n                }\n\n                return htmlSrc;\n            };\n\n            /**\n             * @param target\n             */\n            var reloadOrderNumber = function reloadOrderNumber(target) {\n                target.each(function (index, el) {\n                    var current = $(this);\n                    var index_css = index + 1;\n                    current.attr('data-position', index_css);\n                });\n            };\n\n            var setOrderNumber = function setOrderNumber(target, number) {\n                target.attr('data-position', number || target.index() + 1);\n            };\n\n            var getNewFieldTemplate = function getNewFieldTemplate(optionType) {\n                return NEW_FIELD_TEMPLATE.replace(/___options___/gi, getOptions(optionType || 'text'));\n            };\n\n            /**\n             * Toggle show/hide content\n             */\n            _self.$body.on('click', '.show-item-details', function (event) {\n                event.preventDefault();\n                var parent = $(this).closest('li');\n                $(this).toggleClass('active');\n                parent.toggleClass('active');\n            });\n            _self.$body.on('click', '.btn-close-field', function (event) {\n                event.preventDefault();\n                var parent = $(this).closest('li');\n                parent.toggleClass('active');\n                parent.find('> .field-column .show-item-details').toggleClass('active');\n            });\n\n            /**\n             * Add field\n             */\n            _self.$body.on('click', '.btn-add-field', function (event) {\n                event.preventDefault();\n                var $current = $(this);\n\n                totalAdded++;\n\n                var target = $current.closest('.add-new-field').find('> .sortable-wrapper');\n\n                var $template = $(getNewFieldTemplate());\n\n                target.append($template);\n\n                $template.find('.line[data-option=title] input[type=text]').focus();\n\n                setOrderNumber($template);\n\n                //reloadOrderNumber(target.find('> li'));\n                $template.find('.sortable-wrapper').sortable();\n            });\n\n            /**\n             * Change field type\n             */\n            _self.$body.on('change', '.change-field-type', function (event) {\n                event.preventDefault();\n                var $current = $(this);\n                var parent = $current.closest('.item-details');\n                var target = parent.find('> .options');\n\n                target.html(getOptions($current.val()));\n            });\n\n            /**\n             * Change the related columns title\n             */\n            _self.$body.on('change blur', '.line[data-option=slug] input[type=text]', function (event) {\n                var $current = $(this);\n                var text = WebEd.stringToSlug($current.val(), '_');\n                var $parent = $current.closest('.line');\n\n                $parent.closest('.ui-sortable-handle').find('> .field-column .field-slug').text(text);\n\n                $current.val(text);\n            });\n            _self.$body.on('change blur', '.line[data-option=type] select', function (event) {\n                var $current = $(this);\n                var text = WebEd.stringToSlug($current.val(), '_');\n                var $parent = $current.closest('.line');\n\n                $parent.closest('.ui-sortable-handle').find('> .field-column .field-type').text($current.find('option[value=\"' + text + '\"]').text());\n\n                $current.val(text);\n            });\n            _self.$body.on('change blur', '.line[data-option=title] input[type=text]', function (event) {\n                var $current = $(this);\n                var $parent = $current.closest('.line');\n                var $nameSlugField = $parent.find('~ .line[data-option=slug] input[type=text]');\n                var text = $current.val();\n\n                /**\n                 * Change the line title\n                 */\n                $parent.closest('.ui-sortable-handle').find('> .field-column .field-label').text(text);\n\n                /**\n                 * Change field name\n                 */\n                if (!$nameSlugField.val()) {\n                    $nameSlugField.val(WebEd.stringToSlug(text, '_')).trigger('change');\n                }\n            });\n\n            /**\n             * Delete field\n             */\n            $('#deleted_items').val('');\n            _self.$body.on('click', '.btn-remove', function (event) {\n                event.preventDefault();\n                var $parent = $(this).closest('.ui-sortable-handle');\n                var $grandParent = $parent.parent();\n                DELETED_FIELDS.push($parent.data('id'));\n                $parent.animate({\n                    top: -60,\n                    left: 60,\n                    opacity: 0.3\n                }, 300, function () {\n                    $parent.remove();\n                    reloadOrderNumber($grandParent.find('> li'));\n                });\n                $('#deleted_items').val(JSON.stringify(DELETED_FIELDS));\n            });\n\n            /**\n             *\n             * @param fields\n             * @param $appendTo\n             */\n            var initFields = function initFields(fields, $appendTo) {\n                /**\n                 * Enable sortable\n                 */\n                $appendTo.sortable();\n\n                fields.forEach(function (field, indexField) {\n                    var $template = $(getNewFieldTemplate(field.type || 'text'));\n                    $template.data('id', field.id || 0);\n                    $template.find('.line[data-option=type] select').val(Helpers.arrayGet(field, 'type', 'text'));\n                    $template.find('.line[data-option=title] input').val(Helpers.arrayGet(field, 'title', ''));\n                    $template.find('.line[data-option=slug] input').val(Helpers.arrayGet(field, 'slug', ''));\n                    $template.find('.line[data-option=instructions] textarea').val(Helpers.arrayGet(field, 'instructions', ''));\n\n                    $template.find('.line[data-option=defaultvalue] input').val(Helpers.arrayGet(field.options, 'defaultValue', ''));\n                    $template.find('.line[data-option=defaultvaluetextarea] textarea').val(Helpers.arrayGet(field.options, 'defaultValueTextarea', ''));\n                    $template.find('.line[data-option=placeholdertext] input').val(Helpers.arrayGet(field.options, 'placeholderText', ''));\n                    $template.find('.line[data-option=wysiwygtoolbar] select').val(Helpers.arrayGet(field.options, 'wysiwygToolbar', 'basic'));\n                    $template.find('.line[data-option=selectchoices] textarea').val(Helpers.arrayGet(field.options, 'selectChoices', ''));\n                    $template.find('.line[data-option=buttonlabel] input').val(Helpers.arrayGet(field.options, 'buttonLabel', ''));\n                    $template.find('.line[data-option=rows] input').val(Helpers.arrayGet(field.options, 'rows', ''));\n\n                    $template.find('.field-label').html(Helpers.arrayGet(field, 'title', 'Text'));\n                    $template.find('.field-slug').html(Helpers.arrayGet(field, 'slug', 'text'));\n                    $template.find('.field-type').html(Helpers.arrayGet(field, 'type', 'text'));\n\n                    $template.removeClass('active');\n                    $template.attr('data-position', indexField + 1);\n\n                    initFields(field.items, $template.find('.sortable-wrapper'));\n\n                    $appendTo.append($template);\n                });\n            };\n            initFields(CUSTOM_FIELDS_DATA, $('.sortable-wrapper'));\n        }\n    }, {\n        key: 'exportRulesToJson',\n        value: function exportRulesToJson() {\n            var result = [];\n\n            $('.custom-fields-rules .line-group-container .line-group').each(function () {\n                var $current = $(this);\n                var lineGroupData = [];\n                $current.find('.rule-line').each(function (index, element) {\n                    var $currentLine = $(this);\n\n                    var data = {\n                        name: $currentLine.find('.rule-a').val(),\n                        type: $currentLine.find('.rule-type').val(),\n                        value: $currentLine.find('.rule-b:not(.hidden)').val()\n                    };\n                    lineGroupData.push(data);\n                });\n                if (lineGroupData.length > 0) {\n                    result.push(lineGroupData);\n                }\n            });\n\n            return result;\n        }\n    }, {\n        key: 'exportFieldsToJson',\n        value: function exportFieldsToJson() {\n            var result = [];\n\n            var getAllFields = function getAllFields($from, $pushTo) {\n                $from.each(function (index, element) {\n                    var object = {};\n                    var $current = $(this);\n\n                    object.id = $current.data('id') || 0;\n                    object.title = $current.find('> .item-details > .line[data-option=title] input[type=text]').val() || null;\n                    object.slug = $current.find('> .item-details > .line[data-option=slug] input[type=text]').val() || null;\n                    object.instructions = $current.find('> .item-details > .line[data-option=instructions] textarea').val() || null;\n                    object.type = $current.find('> .item-details > .line[data-option=type] select').val() || null;\n                    object.options = {\n                        defaultValue: $current.find('> .item-details > .options > .line[data-option=defaultvalue] input[type=text]').val() || null,\n                        defaultValueTextarea: $current.find('> .item-details > .options > .line[data-option=defaultvaluetextarea] textarea').val() || null,\n                        placeholderText: $current.find('> .item-details > .options > .line[data-option=placeholdertext] input[type=text]').val() || null,\n                        wysiwygToolbar: $current.find('> .item-details > .options > .line[data-option=wysiwygtoolbar] select').val() || null,\n                        selectChoices: $current.find('> .item-details > .options > .line[data-option=selectchoices] textarea').val() || null,\n                        buttonLabel: $current.find('> .item-details > .options > .line[data-option=buttonlabel] input[type=text]').val() || null,\n                        rows: $current.find('> .item-details > .options > .line[data-option=rows] input[type=number]').val() || null\n                    };\n                    object.items = [];\n\n                    getAllFields($current.find('> .item-details > .options > .line[data-option=repeater] > .col-xs-9 > .add-new-field > .sortable-wrapper > .ui-sortable-handle'), object.items);\n\n                    $pushTo.push(object);\n                });\n            };\n\n            getAllFields($('#custom_field_group_items > .ui-sortable-handle'), result);\n\n            return result;\n        }\n    }]);\n\n    return ManageCustomFields;\n}();\n\n(function ($) {\n    $(window).load(function () {\n        new ManageCustomFields();\n    });\n})(jQuery);\n\n/***/ })\n\n/******/ });\n\n\n// WEBPACK FOOTER //\n// projects-root/laravel/public/admin/modules/custom-fields/edit-field-group.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 20);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 6c6f3df66f280f5788a9","class ManageCustomFields {\n    constructor() {\n        this.$body = $('body');\n        this.RULES_GROUP_TEMPLATE_HTML = $('#rules_group_template').html();\n\n        let _self = this;\n\n        /**\n         * Pass data to form when submit\n         */\n        this.$body.on('submit', '.form-update-field-group', function (event) {\n            //event.preventDefault();\n            let dataRules = JSON.stringify(_self.exportRulesToJson());\n            let dataFields = JSON.stringify(_self.exportFieldsToJson());\n            $('#custom_fields_rules').html(dataRules).val(dataRules);\n            $('#custom_fields').html(dataFields).val(dataFields);\n        });\n\n        this.handleRules();\n        this.handleFieldGroups();\n    }\n\n    handleRules() {\n        let _self = this;\n\n        let CURRENT_RULES = $.parseJSON($('#custom_fields_rules').val());\n        let $_GLOBAL_TEMPLATE = $(_self.RULES_GROUP_TEMPLATE_HTML),\n            LINE_GROUP_TEMPLATE = $('#rules_line_group_template').html(),\n            $_GROUP_CONTAINER = $('.line-group-container');\n\n        /**\n         * Add new rule\n         */\n        _self.$body.on('click', '.location-add-rule', function (event) {\n            event.preventDefault();\n            let $current = $(this);\n            let $template = $_GLOBAL_TEMPLATE.clone();\n\n            if ($current.hasClass('location-add-rule-and')) {\n                $current.closest('.line-group').append($template);\n            } else {\n                let $group = $(LINE_GROUP_TEMPLATE);\n\n                $group.append($template);\n                $_GROUP_CONTAINER.append($group);\n            }\n            $template.find('.rule-a').trigger('change');\n        });\n\n        /**\n         * Change the rule-a\n         */\n        _self.$body.on('change', '.rule-a', function (event) {\n            event.preventDefault();\n            let $current = $(this);\n            let $parent = $current.closest('.rule-line');\n            $parent.find('.rules-b-group select').addClass('hidden');\n            $parent.find('.rules-b-group select[data-rel=\"' + $current.val() + '\"]').removeClass('hidden');\n        });\n\n        /**\n         * Remove rule\n         */\n        _self.$body.on('click', '.remove-rule-line', function (event) {\n            event.preventDefault();\n            let $current = $(this);\n            let $parent = $current.closest('.rule-line');\n            let $lineGroup = $current.closest('.line-group');\n            if ($lineGroup.find('.rule-line').length < 2) {\n                $lineGroup.remove();\n            } else {\n                $parent.remove();\n            }\n        });\n\n        /**\n         * Init data when page loaded\n         */\n        if (CURRENT_RULES.length < 1) {\n            $('.location-add-rule').trigger('click');\n        } else {\n            CURRENT_RULES.forEach(function (rules, indexRule) {\n                let $group = $(LINE_GROUP_TEMPLATE);\n                rules.forEach(function (item, index) {\n                    let $template = $_GLOBAL_TEMPLATE.clone();\n                    $template.find('.rule-a').val(item.name);\n                    $template.find('.rule-type').val(item.type);\n                    $template.find('.rule-b:not([data-rel=\"' + item.name + '\"])').addClass('hidden');\n                    $template.find('.rule-b[data-rel=\"' + item.name + '\"]').val(item.value);\n                    $group.append($template);\n                });\n                $_GROUP_CONTAINER.append($group);\n            });\n        }\n    }\n\n    handleFieldGroups() {\n        let _self = this;\n\n        let totalAdded = 0;\n\n        let CUSTOM_FIELDS_DATA = $.parseJSON($('#custom_fields').val());\n\n        /**\n         * Deleted fields\n         * @type {Array}\n         */\n        let DELETED_FIELDS = [];\n\n        /**\n         * Template of new field item\n         * @type {any}\n         */\n        let NEW_FIELD_TEMPLATE = $('#_new-field-source_template').html();\n\n        /**\n         * Get all option templates\n         * @type {{repeater: (any), defaultValue: (any), defaultValueTextarea: (any), placeholderText: (any), wysiwygToolbar: (any), selectChoices: (any), buttonLabel: (any)}}\n         */\n        let FIELD_OPTIONS = {\n            repeater: $('#_options-repeater_template').html(),\n            defaultValue: $('#_options-defaultvalue_template').html(),\n            defaultValueTextarea: $('#_options-defaultvaluetextarea_template').html(),\n            placeholderText: $('#_options-placeholdertext_template').html(),\n            wysiwygToolbar: $('#_options-wysiwygtoolbar_template').html(),\n            selectChoices: $('#_options-selectchoices_template').html(),\n            buttonLabel: $('#_options-buttonlabel_template').html(),\n            rows: $('#_options-rows_template').html()\n        };\n\n        /**\n         * Get related options of current field type\n         * @param value\n         * @returns {string}\n         */\n        let getOptions = function (value) {\n            let htmlSrc = '';\n            switch (value) {\n                case 'text':\n                case 'email':\n                case 'password':\n                case 'number':\n                    htmlSrc += FIELD_OPTIONS.defaultValue + FIELD_OPTIONS.placeholderText;\n                    break;\n                case 'image':\n                case 'file':\n                    return '';\n                    break;\n                case 'textarea':\n                    htmlSrc += FIELD_OPTIONS.defaultValueTextarea + FIELD_OPTIONS.placeholderText + FIELD_OPTIONS.rows;\n                    break;\n                case 'wysiwyg':\n                    htmlSrc += FIELD_OPTIONS.defaultValueTextarea + FIELD_OPTIONS.wysiwygToolbar;\n                    break;\n                case 'select':\n                    htmlSrc += FIELD_OPTIONS.selectChoices + FIELD_OPTIONS.defaultValue;\n                    break;\n                case 'checkbox':\n                    htmlSrc += FIELD_OPTIONS.selectChoices;\n                    break;\n                case 'radio':\n                    htmlSrc += FIELD_OPTIONS.selectChoices;\n                    break;\n                case 'repeater':\n                    htmlSrc += FIELD_OPTIONS.repeater + FIELD_OPTIONS.buttonLabel;\n                    break;\n                default:\n\n                    break;\n            }\n\n            return htmlSrc;\n        };\n\n        /**\n         * @param target\n         */\n        let reloadOrderNumber = function (target) {\n            target.each(function (index, el) {\n                let current = $(this);\n                let index_css = index + 1;\n                current.attr('data-position', index_css);\n            });\n        };\n\n        let setOrderNumber = function (target, number) {\n            target.attr('data-position', number || target.index() + 1);\n        };\n\n        let getNewFieldTemplate = function (optionType) {\n            return NEW_FIELD_TEMPLATE.replace(/___options___/gi, getOptions(optionType || 'text'));\n        };\n\n        /**\n         * Toggle show/hide content\n         */\n        _self.$body.on('click', '.show-item-details', function (event) {\n            event.preventDefault();\n            let parent = $(this).closest('li');\n            $(this).toggleClass('active');\n            parent.toggleClass('active');\n        });\n        _self.$body.on('click', '.btn-close-field', function (event) {\n            event.preventDefault();\n            let parent = $(this).closest('li');\n            parent.toggleClass('active');\n            parent.find('> .field-column .show-item-details').toggleClass('active');\n        });\n\n        /**\n         * Add field\n         */\n        _self.$body.on('click', '.btn-add-field', function (event) {\n            event.preventDefault();\n            let $current = $(this);\n\n            totalAdded++;\n\n            let target = $current.closest('.add-new-field').find('> .sortable-wrapper');\n\n            let $template = $(getNewFieldTemplate());\n\n            target.append($template);\n\n            $template.find('.line[data-option=title] input[type=text]').focus();\n\n            setOrderNumber($template);\n\n            //reloadOrderNumber(target.find('> li'));\n            $template.find('.sortable-wrapper').sortable();\n        });\n\n        /**\n         * Change field type\n         */\n        _self.$body.on('change', '.change-field-type', function (event) {\n            event.preventDefault();\n            let $current = $(this);\n            let parent = $current.closest('.item-details');\n            let target = parent.find('> .options');\n\n            target.html(getOptions($current.val()));\n        });\n\n        /**\n         * Change the related columns title\n         */\n        _self.$body.on('change blur', '.line[data-option=slug] input[type=text]', function (event) {\n            let $current = $(this);\n            let text = WebEd.stringToSlug($current.val(), '_');\n            let $parent = $current.closest('.line');\n\n            $parent.closest('.ui-sortable-handle').find('> .field-column .field-slug').text(text);\n\n            $current.val(text);\n        });\n        _self.$body.on('change blur', '.line[data-option=type] select', function (event) {\n            let $current = $(this);\n            let text = WebEd.stringToSlug($current.val(), '_');\n            let $parent = $current.closest('.line');\n\n            $parent.closest('.ui-sortable-handle').find('> .field-column .field-type').text($current.find('option[value=\"' + text + '\"]').text());\n\n            $current.val(text);\n        });\n        _self.$body.on('change blur', '.line[data-option=title] input[type=text]', function (event) {\n            let $current = $(this);\n            let $parent = $current.closest('.line');\n            let $nameSlugField = $parent.find('~ .line[data-option=slug] input[type=text]');\n            let text = $current.val();\n\n            /**\n             * Change the line title\n             */\n            $parent.closest('.ui-sortable-handle').find('> .field-column .field-label').text(text);\n\n            /**\n             * Change field name\n             */\n            if (!$nameSlugField.val()) {\n                $nameSlugField.val(WebEd.stringToSlug(text, '_')).trigger('change');\n            }\n        });\n\n        /**\n         * Delete field\n         */\n        $('#deleted_items').val('');\n        _self.$body.on('click', '.btn-remove', function (event) {\n            event.preventDefault();\n            let $parent = $(this).closest('.ui-sortable-handle');\n            let $grandParent = $parent.parent();\n            DELETED_FIELDS.push($parent.data('id'));\n            $parent.animate({\n                    top: -60,\n                    left: 60,\n                    opacity: 0.3\n                },\n                300,\n                function () {\n                    $parent.remove();\n                    reloadOrderNumber($grandParent.find('> li'));\n                });\n            $('#deleted_items').val(JSON.stringify(DELETED_FIELDS));\n        });\n\n        /**\n         *\n         * @param fields\n         * @param $appendTo\n         */\n        let initFields = function (fields, $appendTo) {\n            /**\n             * Enable sortable\n             */\n            $appendTo.sortable();\n\n            fields.forEach(function (field, indexField) {\n                let $template = $(getNewFieldTemplate(field.type || 'text'));\n                $template.data('id', field.id || 0);\n                $template.find('.line[data-option=type] select').val(Helpers.arrayGet(field, 'type', 'text'));\n                $template.find('.line[data-option=title] input').val(Helpers.arrayGet(field, 'title', ''));\n                $template.find('.line[data-option=slug] input').val(Helpers.arrayGet(field, 'slug', ''));\n                $template.find('.line[data-option=instructions] textarea').val(Helpers.arrayGet(field, 'instructions', ''));\n\n                $template.find('.line[data-option=defaultvalue] input').val(Helpers.arrayGet(field.options, 'defaultValue', ''));\n                $template.find('.line[data-option=defaultvaluetextarea] textarea').val(Helpers.arrayGet(field.options, 'defaultValueTextarea', ''));\n                $template.find('.line[data-option=placeholdertext] input').val(Helpers.arrayGet(field.options, 'placeholderText', ''));\n                $template.find('.line[data-option=wysiwygtoolbar] select').val(Helpers.arrayGet(field.options, 'wysiwygToolbar', 'basic'));\n                $template.find('.line[data-option=selectchoices] textarea').val(Helpers.arrayGet(field.options, 'selectChoices', ''));\n                $template.find('.line[data-option=buttonlabel] input').val(Helpers.arrayGet(field.options, 'buttonLabel', ''));\n                $template.find('.line[data-option=rows] input').val(Helpers.arrayGet(field.options, 'rows', ''));\n\n                $template.find('.field-label').html(Helpers.arrayGet(field, 'title', 'Text'));\n                $template.find('.field-slug').html(Helpers.arrayGet(field, 'slug', 'text'));\n                $template.find('.field-type').html(Helpers.arrayGet(field, 'type', 'text'));\n\n                $template.removeClass('active');\n                $template.attr('data-position', (indexField + 1));\n\n                initFields(field.items, $template.find('.sortable-wrapper'));\n\n                $appendTo.append($template);\n            });\n        };\n        initFields(CUSTOM_FIELDS_DATA, $('.sortable-wrapper'));\n    }\n\n    exportRulesToJson() {\n        let result = [];\n\n        $('.custom-fields-rules .line-group-container .line-group').each(function () {\n            let $current = $(this);\n            let lineGroupData = [];\n            $current.find('.rule-line').each(function (index, element) {\n                let $currentLine = $(this);\n\n                let data = {\n                    name: $currentLine.find('.rule-a').val(),\n                    type: $currentLine.find('.rule-type').val(),\n                    value: $currentLine.find('.rule-b:not(.hidden)').val()\n                };\n                lineGroupData.push(data);\n            });\n            if (lineGroupData.length > 0) {\n                result.push(lineGroupData);\n            }\n        });\n\n        return result;\n    }\n\n    exportFieldsToJson() {\n        let result = [];\n\n        let getAllFields = function ($from, $pushTo) {\n            $from.each(function (index, element) {\n                let object = {};\n                let $current = $(this);\n\n                object.id = $current.data('id') || 0;\n                object.title = $current.find('> .item-details > .line[data-option=title] input[type=text]').val() || null;\n                object.slug = $current.find('> .item-details > .line[data-option=slug] input[type=text]').val() || null;\n                object.instructions = $current.find('> .item-details > .line[data-option=instructions] textarea').val() || null;\n                object.type = $current.find('> .item-details > .line[data-option=type] select').val() || null;\n                object.options = {\n                    defaultValue: $current.find('> .item-details > .options > .line[data-option=defaultvalue] input[type=text]').val() || null,\n                    defaultValueTextarea: $current.find('> .item-details > .options > .line[data-option=defaultvaluetextarea] textarea').val() || null,\n                    placeholderText: $current.find('> .item-details > .options > .line[data-option=placeholdertext] input[type=text]').val() || null,\n                    wysiwygToolbar: $current.find('> .item-details > .options > .line[data-option=wysiwygtoolbar] select').val() || null,\n                    selectChoices: $current.find('> .item-details > .options > .line[data-option=selectchoices] textarea').val() || null,\n                    buttonLabel: $current.find('> .item-details > .options > .line[data-option=buttonlabel] input[type=text]').val() || null,\n                    rows: $current.find('> .item-details > .options > .line[data-option=rows] input[type=number]').val() || null\n                };\n                object.items = [];\n\n                getAllFields($current.find('> .item-details > .options > .line[data-option=repeater] > .col-xs-9 > .add-new-field > .sortable-wrapper > .ui-sortable-handle'), object.items);\n\n                $pushTo.push(object);\n            });\n        };\n\n        getAllFields($('#custom_field_group_items > .ui-sortable-handle'), result);\n\n        return result;\n    }\n}\n\n(function ($) {\n    $(window).load(function () {\n        new ManageCustomFields();\n    });\n})(jQuery);\n\n\n\n// WEBPACK FOOTER //\n// ./core/custom-fields/resources/assets/js/admin/modules/custom-fields/edit-field-group.js"],"sourceRoot":""}